/**
 * Anvil prototyping engine
 *
 * @package Anvil
 * @version 3 beta
 */
/**
 * Establish rhythm.
 * 
 * We're using a regular "beat" of the line-height, so all spacing
 * will be done using a multiple of the beat.
 */
:root {
  --ff-alt: "Work Sans", sans-serif;
  --ff-heading: "Work Sans", sans-serif;
  --ff-icon: "Font Awesome 5 Pro";
  --ff-running: "Work Sans", sans-serif;
  --ff-sans: "Work Sans", sans-serif;
  --fs-xs: .8rem;
  --fs-s: .9rem;
  --fs-m: 1rem;
  --fs-l: 1.75rem;
  --fs-xl: 2.6rem;
  /**
 	 * This is the only magic number in Anvil. Go me.
 	 * See websemantics.uk/tools/responsive-font-calculator/
 	 */
  --fs-running: calc(0.8rem + ((1vw - 0.24rem) * 0.625));
  --fw-light: 300;
  --fw-normal: 380;
  --fw-medium: 530;
  --fw-bold: 600;
  --fw-heavy: 800;
  --border-medium: 3px;
  --border-large: 5px;
  --border-small: 2px;
  --leading: 1.5;
  --measure: 45rem;
  --measure-min: 15rem;
  --space: 0;
  --beat-xs: calc(var(--leading)*.25rem);
  --beat-s: calc(var(--leading)*.5rem);
  --beat: calc(var(--leading)*1rem);
  --beat-m: calc(var(--leading)*1rem);
  --beat-l: calc(var(--leading)*2rem);
  --beat-xl: calc(var(--leading)*3rem);
}

:root {
  --c-alt: powderblue;
  --c-bg: white;
  --c-bg--reversed: #333;
  --c-highlight: hsl(46, 100%, 89%);
  --c-house: hsl(210, 50%, 50%);
  --c-house--dark: hsl(210, 50%, 28%);
  --c-house--light: hsl(210, 35%, 80%);
  --c-neutral: hsl(210, 5%, 50%);
  --c-neutral--alpha: hsla(210, 5%, 50%, 50%);
  --c-neutral--dark: hsl(210, 5%, 28%);
  --c-neutral--light: hsl(210, 5%, 85%);
  --c-neutral--lighter: hsl(210, 5%, 92%);
  --c-running: #333;
  --c-running--reversed: var(--c-bg);
  --c-info: hsl(194, 70%, 40%);
  --c-info--bg: hsl(194, 100%, 98%);
  --c-info--dark: hsl(194, 100%, 27%);
  --c-info--light: hsl(194, 68%, 85%);
  --c-note: hsl(35, 70%, 50%);
  --c-alert: hsl(10, 96%, 56%);
  --c-alert--bg: hsl(10, 100%, 96%);
  --c-alert--dark: hsl(10, 91%, 42%);
  --c-alert--light: hsl(10, 87%, 64%);
  --c-warning--bg: var(--c-alert--bg);
  --c-warning: var(--c-alert);
  --c-warning--dark: var(--c-alert--dark);
  --c-warning--light: var(--c-alert--light);
  --box-shadow-large: 0 0 1rem rgba(0, 0, 0, .1);
}

/**
 * Set up the page and fix any cross-browser weirdness
 */
/**
 * Site setup
 */
:root {
  /**
	 * Global variables we want to use on potentially any
	 * element.
	 */
  --bg: var(--c-bg);
  --border: 0;
  --ff: var(--ff-running);
  --fs: var(--fs-running);
  --fw: var(--fw-normal);
  background-color: var(--bg);
  color: var(--c-running);
  font-family: var(--ff);
  font-size: 20px;
  font-size: var(--fs);
  font-weight: var(--fw);
  line-height: var(--leading);
  min-height: 0;
  overflow-x: hidden;
  scroll-behavior: smooth;
}

*,
:after,
:before {
  border-style: solid;
  border-width: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-variation-settings: var(--ff-recursive--mono), var(--ff-recursive--slnt), var(--ff-recursive--crsv);
  margin: 0;
  max-width: 100vw;
  outline: 0;
  overflow-wrap: break-word;
  padding: 0;
  vertical-align: baseline;
}

:target {
  -webkit-animation-name: focus-highlight;
          animation-name: focus-highlight;
  -webkit-animation-duration: 9s;
          animation-duration: 9s;
  -webkit-animation-iteration-count: 1;
          animation-iteration-count: 1;
}

* + * {
  margin-top: 1.5rem;
}

/**
 * Change the cursor on busy elements in all browsers.
 */
[aria-busy="true"] {
  cursor: progress;
}

/*
 * Change the cursor on control elements in all browsers.
 */
[aria-controls] {
  cursor: pointer;
}

/*
 * Change the cursor on disabled, not-editable, or otherwise
 * inoperable elements in all browsers.
 */
[aria-disabled="true"],
[disabled] {
  cursor: not-allowed;
}

/*
 * Remove the tapping delay on clickable elements in all browsers.
 */
a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
      touch-action: manipulation;
}

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Chrome, Safari & Edge don't get this right
 */
b,
strong {
  font-weight: bolder;
}

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

iframe {
  border-style: none;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * Set up focus styling for elements we need to tab to, like 
 * anchors, buttons, cards in a reel, etc.
 */
/**
 * Helper mixin to consistently adjust spacing and sizing on
 * layout primitives or objects while staying dry.
 */
/**
 * Creates an "old lens" effect.
 */
/**
 * Highlight an element when someone jumps to it from a link.
 */
@-webkit-keyframes focus-highlight {
  0% {
    background: var(--c-bg);
  }
  10% {
    background: var(--c-bg);
  }
  20% {
    background: var(--c-highlight);
  }
  100% {
    background: var(--c-bg);
  }
}
@keyframes focus-highlight {
  0% {
    background: var(--c-bg);
  }
  10% {
    background: var(--c-bg);
  }
  20% {
    background: var(--c-highlight);
  }
  100% {
    background: var(--c-bg);
  }
}

/**
 * Lays out grandchildren in a series that wraps.
 *
 * Use-cases: tag clusters, chains of items, navigation etc.
 */
.\@battery {
  --battery-space: 1rem;
}

.\@battery * + * {
  margin-top: 0;
}

.\@battery > * {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  margin: calc(var(--battery-space) / 2 * -1);
}

.\@battery > * > * {
  margin: calc(var(--battery-space) / 2);
}

.\@battery.\&arrange\:centered > * {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.\@battery.\&arrange\:right > * {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

.\@battery.\&suppress-scroller {
  overflow: hidden;
}

.\@battery.\&space\:tight {
  --battery-space: var(--0);
}

.\@battery.\&space\:xsmall {
  --battery-space: var(--beat-xs);
}

.\@battery.\&space\:small {
  --battery-space: var(--beat-s);
}

.\@battery.\&space\:medium {
  --battery-space: var(--beat-m);
}

.\@battery.\&space\:large {
  --battery-space: var(--beat-l);
}

.\@battery.\&space\:xlarge {
  --battery-space: var(--beat-xl);
}

/**
 * A box. With padding. That's it. It's a primitive, not an 
 * object.
 *
 * Use cases: pretty much anything, but actually less than you'd
 * think. It's handy for including on the <article> element, for
 * instance.
 */
.\@box {
  --box-space: var(--beat);
  --box-space-above: var(--box-space);
  --box-space-below: var(--box-space);
  --box-space-left: var(--box-space);
  --box-space-right: var(--box-space);
  padding-bottom: var(--box-space-below);
  padding-left: var(--box-space-left);
  padding-right: var(--box-space-right);
  padding-top: var(--box-space-above);
}

.\@box.\&space\:tight {
  --box-space: var(--0);
}

.\@box.\&space\:xsmall {
  --box-space: var(--beat-xs);
}

.\@box.\&space\:small {
  --box-space: var(--beat-s);
}

.\@box.\&space\:medium {
  --box-space: var(--beat-m);
}

.\@box.\&space\:large {
  --box-space: var(--beat-l);
}

.\@box.\&space\:xlarge {
  --box-space: var(--beat-xl);
}

.\@box.\&space\:above\:tight {
  --box-space-above: var(--0);
}

.\@box.\&space\:above\:xsmall {
  --box-space-above: var(--beat-xs);
}

.\@box.\&space\:above\:small {
  --box-space-above: var(--beat-s);
}

.\@box.\&space\:above\:medium {
  --box-space-above: var(--beat-m);
}

.\@box.\&space\:above\:large {
  --box-space-above: var(--beat-l);
}

.\@box.\&space\:above\:xlarge {
  --box-space-above: var(--beat-xl);
}

.\@box.\&space\:below\:tight {
  --box-space-below: var(--0);
}

.\@box.\&space\:below\:xsmall {
  --box-space-below: var(--beat-xs);
}

.\@box.\&space\:below\:small {
  --box-space-below: var(--beat-s);
}

.\@box.\&space\:below\:medium {
  --box-space-below: var(--beat-m);
}

.\@box.\&space\:below\:large {
  --box-space-below: var(--beat-l);
}

.\@box.\&space\:below\:xlarge {
  --box-space-below: var(--beat-xl);
}

.\@box.\&space\:left\:tight {
  --box-space-left: var(--0);
}

.\@box.\&space\:left\:xsmall {
  --box-space-left: var(--beat-xs);
}

.\@box.\&space\:left\:small {
  --box-space-left: var(--beat-s);
}

.\@box.\&space\:left\:medium {
  --box-space-left: var(--beat-m);
}

.\@box.\&space\:left\:large {
  --box-space-left: var(--beat-l);
}

.\@box.\&space\:left\:xlarge {
  --box-space-left: var(--beat-xl);
}

.\@box.\&space\:right\:tight {
  --box-space-right: var(--0);
}

.\@box.\&space\:right\:xsmall {
  --box-space-right: var(--beat-xs);
}

.\@box.\&space\:right\:small {
  --box-space-right: var(--beat-s);
}

.\@box.\&space\:right\:medium {
  --box-space-right: var(--beat-m);
}

.\@box.\&space\:right\:large {
  --box-space-right: var(--beat-l);
}

.\@box.\&space\:right\:xlarge {
  --box-space-right: var(--beat-xl);
}

/**
 * Centers its children horizontally in a stack
 * 
 * Use cases: pretty much anything.
 */
.\@center-h {
  --height: autofit;
  --center-h-space: beats(1);
  --width: 100%;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  margin-left: auto;
  margin-right: auto;
  max-width: var(--width);
  min-height: var(--height);
  padding-left: var(--center-h-space);
  padding-right: var(--center-h-space);
}

.\@center-h.\&space\:tight {
  --center-h-space: var(--0);
}

.\@center-h.\&space\:xsmall {
  --center-h-space: var(--beat-xs);
}

.\@center-h.\&space\:small {
  --center-h-space: var(--beat-s);
}

.\@center-h.\&space\:medium {
  --center-h-space: var(--beat-m);
}

.\@center-h.\&space\:large {
  --center-h-space: var(--beat-l);
}

.\@center-h.\&space\:xlarge {
  --center-h-space: var(--beat-xl);
}

/**
 * Centers its child vertically in the viewport.
 * Allows for a header and/or footer above/below the principal
 * element; these will be aligned to the top and/or bottom. If
 * multiple elements are placed, they will be arranged with the
 * middle element centered.
 * 
 * Use cases: <dialog> elements and other modals, full-page blog
 * titles, etc.
 */
.\@center-v {
  --height: 100vh;
  --width: 100vw;
  /**
	 * Structural settings
	 */
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  /**
	 * Adjustable settings
	 */
  max-width: var(--width);
  min-height: var(--height);
  /**
	 * Align the all-important central element(s).
	 */
  /**
	 * Align the top element.
	 */
  /**
	 * Align the bottom element.
	 */
}

.\@center-v > * {
  margin-bottom: auto;
  margin-top: auto;
}

.\@center-v > header, .\@center-v\\header {
  margin-top: 0;
}

.\@center-v > footer, .\@center-v\\footer {
  margin-bottom: 0;
}

.\@center-v.\&loose > footer,
.\@center-v.\&loose > .\@center-v\\footer {
  margin-top: 3rem;
}

.\@center-v.\&loose > header,
.\@center-v.\&loose > .\@center-v\\header {
  margin-bottom: 3rem;
}

/**
 * Lays out direct children as equal-width columns.
 *
 * Use-cases: feature-columns, horizontal lists etc.
 */
.\@columns {
  --columns-space: 1rem;
  --columns-threshold: 32rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.\@columns * + * {
  margin-top: 0;
}

.\@columns > * {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -ms-flex-preferred-size: calc((var(--columns-threshold) - 100%) * 999);
      flex-basis: calc((var(--columns-threshold) - 100%) * 999);
  margin: var(--columns-space);
  margin-top: 0;
  min-width: var(--measure-min);
}

.\@columns.\&max-2 > :nth-last-child(n+3),
.\@columns.\&max-2 > :nth-last-child(n+3) ~ * {
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
}

.\@columns.\&max-3 > :nth-last-child(n+4),
.\@columns.\&max-3 > :nth-last-child(n+4) ~ * {
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
}

.\@columns.\&max-4 > :nth-last-child(n+5),
.\@columns.\&max-4 > :nth-last-child(n+5) ~ * {
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
}

.\@columns.\&max-5 > :nth-last-child(n+6),
.\@columns.\&max-5 > :nth-last-child(n+6) ~ * {
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
}

.\@columns.\&max-6 > :nth-last-child(n+7),
.\@columns.\&max-6 > :nth-last-child(n+7) ~ * {
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
}

.\@columns.\&space\:tight {
  --columns-space: var(--0);
}

.\@columns.\&space\:xsmall {
  --columns-space: var(--beat-xs);
}

.\@columns.\&space\:small {
  --columns-space: var(--beat-s);
}

.\@columns.\&space\:medium {
  --columns-space: var(--beat-m);
}

.\@columns.\&space\:large {
  --columns-space: var(--beat-l);
}

.\@columns.\&space\:xlarge {
  --columns-space: var(--beat-xl);
}

/**
 * Creates a frame around an image or video to crop it at the
 * right aspect ratio.
 *
 * Use cases: hero areas, product photos, etc.
 */
.\@frame {
  --aspect-ratio: 9/16;
  padding-bottom: calc(var(--aspect-ratio) * 100%);
  position: relative;
}

@media (orientation: portrait) {
  .\@frame {
    --aspect-ratio: 1/1;
  }
}

.\@frame > * {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.\@frame > img,
.\@frame > video {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

/**
 * Lays out direct children in a grid format.
 *
 * Use cases: lists of posts, feature-lists etc.
 */
.\@grid {
  --grid-space: 0;
  display: -ms-grid;
  display: grid;
  grid-gap: var(--grid-space);
  -ms-grid-columns: (minmax(var(--measure-min), 1fr))[auto-fit];
      grid-template-columns: repeat(auto-fit, minmax(var(--measure-min), 1fr));
}

.\@grid.\&space\:tight {
  --grid-space: var(--0);
}

.\@grid.\&space\:xsmall {
  --grid-space: var(--beat-xs);
}

.\@grid.\&space\:small {
  --grid-space: var(--beat-s);
}

.\@grid.\&space\:medium {
  --grid-space: var(--beat-m);
}

.\@grid.\&space\:large {
  --grid-space: var(--beat-l);
}

.\@grid.\&space\:xlarge {
  --grid-space: var(--beat-xl);
}

/**
 * Stick an element in the middle of the screen, out of the
 * normal flow, above everything else.
 *
 * Used on <dialog> elements and so forth.
 */
.\@overlay {
  --overlay-space: calc(var(--leading) * 1rem);
  --overlay-space-horiz: var(--overlay-space);
  --overlay-space-vert: var(--overlay-space);
  display: block;
  left: 50%;
  margin: 0;
  max-height: 100vh;
  max-width: 100vw;
  padding: var(--overlay-space-vert) var(--overlay-space-horiz);
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

/**
 * Pull blocks to one side, for quotes, inline nav, asides etc.
 */
.\@pull {
  --border-width: 0;
  --pull-size: 38%;
  --pull-space: var(--beat);
  border: var(--border-width) solid var(--c-neutral);
  margin-bottom: calc(var(--pull-space) - var(--border-width));
  margin-top: calc(var(--pull-space) - var(--border-width));
  max-width: var(--pull-size) !important;
}

.\@pull.\&arrange\:left {
  float: left;
  margin-right: calc(var(--pull-space) / 2);
}

.\@pull.\&arrange\:right {
  float: right;
  margin-left: calc(var(--pull-space) / 2);
}

.\@pull.\&size\:small {
  --pull-size: 38%;
}

@media (min-width: 72rem) {
  .\@pull.\&size\:small {
    --pull-size: 19%;
  }
}

.\@pull.\&size\:medium {
  --pull-size: 50%;
}

@media (min-width: 72rem) {
  .\@pull.\&size\:medium {
    --pull-size: 38%;
  }
}

.\@pull.\&size\:large {
  --pull-size: 100%;
}

@media (min-width: 72rem) {
  .\@pull.\&size\:large {
    --pull-size: 50%;
  }
}

/**
 * Creates a horizontally-scrolling carousel.
 *
 * Use-cases: image scrollers, testimonial sliders, web TV/movie
 * pickers, etc.
 */
.\@reel {
  --reel-space: 1rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: auto;
  overflow-x: auto;
  overflow-y: hidden;
  position: relative;
  scrollbar-color: var(--c-neutral--light) var(--c-neutral);
  /**
	 * Make sure the scrollbar is visible...
	 */
}

.\@reel::-webkit-scrollbar {
  height: 1rem;
}

.\@reel::-webkit-scrollbar-track {
  background-color: var(--c-neutral--light);
}

.\@reel::-webkit-scrollbar-thumb {
  background-color: var(--c-neutral--light);
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, var(--c-neutral--light)), color-stop(0.25rem, var(--c-neutral--light)), color-stop(0.25rem, var(--c-neutral)), color-stop(0.75rem, var(--c-neutral)), color-stop(0.75rem, var(--c-neutral--light)));
  background-image: linear-gradient(var(--c-neutral--light) 0, var(--c-neutral--light) 0.25rem, var(--c-neutral) 0.25rem, var(--c-neutral) 0.75rem, var(--c-neutral--light) 0.75rem);
}

.\@reel > [rel] {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background: var(--c-neutral--light);
  border: var(--border-small) solid var(--c-neutral--light);
  bottom: 0;
  border-radius: var(--border-small);
  cursor: pointer;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-size: 1.5rem;
  padding: 0.75rem;
  position: absolute;
  font-family: var(--ff-icon);
  top: 0;
}

.\@reel > [rel="next"] {
  right: 0;
}

.\@reel > * {
  -webkit-transition: all .3s;
  transition: all .3s;
  outline: var(--border-medium) solid transparent;
  outline-offset: calc(var(--border-medium) * -1);
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
}

.\@reel > *:focus {
  outline: var(--border-medium) solid var(--c-neutral);
  outline-offset: calc(var(--border-medium) * -1);
}

.\@reel > :last-child {
  margin-right: var(--reel-space);
}

.\@reel > * + * {
  margin-left: var(--reel-space);
  margin-top: 0 !important;
}

.\@reel > img {
  -ms-flex-preferred-size: auto;
      flex-basis: auto;
  height: 100%;
  width: auto;
}

.\@reel.\&suppress-clicker::after, .\@reel.\&suppress-clicker::before {
  display: none;
}

.\@reel.\&suppress-scroller {
  scrollbar-color: transparent;
}

.\@reel.\&suppress-scroller::-webkit-scrollbar {
  height: 0;
}

.\@reel.\&suppress-scroller::-webkit-scrollbar-track {
  background-color: transparent;
}

.\@reel.\&suppress-scroller::-webkit-scrollbar-thumb {
  background-color: transparent;
  background-image: none;
}

.\@reel.is-overflowing {
  padding-bottom: var(--reel-space);
}

.\@reel.is-overflowing.\&suppress-scroller {
  padding-bottom: 0;
}

.\@reel.\&space\:tight {
  --reel-space: var(--0);
}

.\@reel.\&space\:xsmall {
  --reel-space: var(--beat-xs);
}

.\@reel.\&space\:small {
  --reel-space: var(--beat-s);
}

.\@reel.\&space\:medium {
  --reel-space: var(--beat-m);
}

.\@reel.\&space\:large {
  --reel-space: var(--beat-l);
}

.\@reel.\&space\:xlarge {
  --reel-space: var(--beat-xl);
}

/**
 * Stacks elements one on top of another with sane margins and no
 * pesky extra vertical space.
 *
 * Use cases: running text, vertical menus, forms etc.
 */
.\@stack {
  --stack-space: var(--beat);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  /**
	 * Position some elements at the top, and others at the bottom, after the
	 * nth element.
	 */
}

.\@stack > * {
  margin-bottom: 0;
  margin-top: 0;
}

.\@stack > * + * {
  margin-top: var(--stack-space);
}

.\@stack:only-child {
  height: 100%;
}

.\@stack.\&space\:tight {
  --stack-space: var(--0);
}

.\@stack.\&space\:xsmall {
  --stack-space: var(--beat-xs);
}

.\@stack.\&space\:small {
  --stack-space: var(--beat-s);
}

.\@stack.\&space\:medium {
  --stack-space: var(--beat-m);
}

.\@stack.\&space\:large {
  --stack-space: var(--beat-l);
}

.\@stack.\&space\:xlarge {
  --stack-space: var(--beat-xl);
}

.\@stack.\&split-after-1 > :nth-child(1) {
  margin-bottom: auto;
}

.\@stack.\&split-after-2 > :nth-child(2) {
  margin-bottom: auto;
}

.\@stack.\&split-after-3 > :nth-child(3) {
  margin-bottom: auto;
}

.\@stack.\&sticky-bottom > :nth-last-child(2) {
  margin-bottom: auto;
}

body {
  margin-top: 0;
}

a {
  -webkit-transition: all .3s;
  transition: all .3s;
  outline: var(--border-medium) solid transparent;
  outline-offset: calc(var(--border-medium) * -1);
}

a:focus {
  outline: var(--border-medium) solid var(--c-neutral);
  outline-offset: calc(var(--border-medium) * -1);
}

/**
 * Used to typeset universal running copy.
 */
.\%running {
  font-family: var(--ff-running);
}

.\%running h1 {
  margin-top: 3rem;
}

.\%running h1 + h2 {
  margin-top: 1rem;
}

.\%running > * {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--measure);
}

.\%running a:link {
  color: var(--c-house);
}

.\%running a:visited {
  color: var(--c-neutral);
}

.\%running a:hover {
  background: var(--c-house);
  border-radius: 0.15rem;
  color: var(--c-running--reversed);
  text-decoration: none;
}

li {
  margin-left: 1rem;
}

strong,
b {
  --fw: var(--fw-bold);
}

em,
i {
  --ff-recursive--slnt: "slnt"-15;
}

/**
 * Used to establish sane baselines for headings.
 */
.\%heading {
  --ff-recursive--mono: "MONO"0;
  font-family: var(--ff-heading);
  letter-spacing: -.03em;
  line-height: 1.2;
  max-width: var(--measure);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  --ff-recursive--mono: "MONO"0;
  font-family: var(--ff-heading);
  letter-spacing: -.03em;
  line-height: 1.2;
  max-width: var(--measure);
}

h1 {
  font-family: var(--ff-heading);
  font-size: var(--fs-xl);
  font-weight: var(--fw-normal);
  line-height: 1.1;
}

h1 strong {
  font-weight: var(--fw-medium);
}

h2 {
  font-size: var(--fs-l);
  font-weight: var(--fw-bold);
}

* + h2 {
  margin-top: 3rem;
}

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  border-top: var(--border-small) solid var(--c-neutral--light);
  height: 0;
  overflow: visible;
}

img {
  display: block;
  width: 100%;
}

/**
 * Anything that should look like a button. Extended in _button.scss.
 */
.\%button {
  -webkit-transition: all .3s;
  transition: all .3s;
  outline: var(--border-medium) solid transparent;
  outline-offset: calc(var(--border-medium) * -1);
  background: var(--c-neutral);
  color: var(--c-running--reversed);
  cursor: pointer;
  font-family: var(--ff-sans);
  -webkit-transition: all .2s;
  transition: all .2s;
}

.\%button:focus {
  outline: var(--border-medium) solid var(--c-neutral);
  outline-offset: calc(var(--border-medium) * -1);
}

.\%button:hover {
  background: var(--c-neutral--dark);
  -webkit-transition: all .2s;
  transition: all .2s;
}

.\%button:focus {
  background: var(--c-neutral--darker);
  -webkit-transition: all .2s;
  transition: all .2s;
}

.\%button i.fas {
  display: inline;
}

button,
input[type="submit"] {
  background: var(--c-neutral);
  color: var(--c-running--reversed);
  cursor: pointer;
  font-family: var(--ff-sans);
  -webkit-transition: all .2s;
  transition: all .2s;
}

button:hover,
input[type="submit"]:hover {
  background: var(--c-neutral--dark);
  -webkit-transition: all .2s;
  transition: all .2s;
}

button:focus,
input[type="submit"]:focus {
  background: var(--c-neutral--darker);
  -webkit-transition: all .2s;
  transition: all .2s;
}

button i.fas,
input[type="submit"] i.fas {
  display: inline;
}

dialog {
  --c-bg: var(--c-neutral--lighter);
  background: var(--c-bg);
  border: var(--border-medium) solid var(--c-neutral);
  border-radius: var(--border-medium);
  -webkit-box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.1), 0 2rem 4rem rgba(0, 0, 0, 0.3);
          box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.1), 0 2rem 4rem rgba(0, 0, 0, 0.3);
  width: var(--measure);
}

dialog:not([open]) {
  display: none;
}

dialog::-webkit-backdrop,
dialog + .backdrop {
  background: rgba(255, 255, 255, 0.35);
  -webkit-transition: background 0.25s;
  transition: background 0.25s;
  will-change: background;
}

dialog::backdrop,
dialog + .backdrop {
  background: rgba(255, 255, 255, 0.35);
  -webkit-transition: background 0.25s;
  transition: background 0.25s;
  will-change: background;
}

dialog .\?close\(dialog\) {
  background: transparent;
  border: 0;
  color: var(--c-running);
  cursor: pointer;
  height: 3rem;
  line-height: 3.4rem;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  right: 0;
  top: 0;
  width: 3rem;
}

dialog .\?close\(dialog\):hover {
  color: black;
  -webkit-transform: scale(1.1);
          transform: scale(1.1);
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
}

dialog .\?close\(dialog\) i {
  font-size: 1.5rem;
  font-style: normal;
}

/**
 * Used to create callout blocks.
 */
.\%notice {
  --bg: #f1f1f1;
  --border: var(--border-large);
  --border-color: #e0e0e0;
  --color: black;
  border: var(--border);
  border-color: var(--border-color);
  border-left-width: 3rem;
  border-radius: .4rem;
  border-style: solid;
  color: var(--color);
  font-family: var(--ff-heading);
  padding: 0.75rem;
  position: relative;
}

.\%notice\\icon {
  font-size: 1.5rem;
  left: -3rem;
  position: absolute;
  text-align: center;
  width: 3rem;
}

.\%notice.\&info {
  --bg: var(--c-info--bg);
  --border-color: var(--c-info--light);
  --color: var(--c-info--dark);
}

.\%notice.\&warning {
  --bg: var(--c-warning--bg);
  --border-color: var(--c-warning--light);
  --color: var(--c-warning--dark);
}

.\%notice > * {
  font-family: inherit;
}

/**
 * Initial paragraphs that should stand out more than others by
 * being larger, having a drop-cap, or whatever.
 */
.\%lede {
  --drop-cap-margin-top: .5rem;
  font-weight: var(--fw-bold);
}

.\%lede::first-letter {
  float: left;
  font-size: 3.1rem;
  font-weight: bold;
  line-height: 2rem;
  margin: var(--drop-cap-margin-top) 0.375rem 0 0;
  text-align: center;
}

.\%card {
  border: 1px solid var(--c-neutral--light);
  border-radius: var(--border-large);
  -webkit-box-shadow: var(--box-shadow-large);
          box-shadow: var(--box-shadow-large);
  max-width: var(--measure-min) !important;
}

details summary + * {
  margin-top: 0 !important;
}

blockquote {
  font-size: var(--fs-s);
}

.\%video {
  --aspect-ratio: 9/16;
  padding-bottom: calc(var(--aspect-ratio)*100%);
  position: relative;
}

.\%video > iframe {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

/**
 * Creates form-like boxes for visually emphasizing an important
 * place of interaction, such as calls to action.
 */
.\%action-box {
  --background: var(--c-neutral--lighter);
  --border: var(--border-large) solid var(--c-neutral--light);
  background: var(--background);
  border: var(--border);
}

.\%pill {
  --bg: var(--c-neutral--light);
  --color: var(--c-neutral--dark);
  background: var(--bg);
  border-radius: var(--border-medium);
  color: var(--color);
  padding-left: var(--border-large);
  padding-right: var(--border-large);
}

.\%placeholder {
  --aspect-ratio: 16/9;
  --placeholder-size: var(--beat-xl);
  padding-bottom: calc(var(--aspect-ratio) * 100%);
  position: relative;
}

.\%placeholder > * {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background: transparent;
  border: var(--border-small) solid var(--c-neutral--light);
  bottom: 0;
  color: var(--c-neutral--dark);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-size: var(--fs-s);
  font-weight: var(--fw-medium);
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  text-align: center;
  text-transform: uppercase;
  top: 0;
}

.\%placeholder.\&size\:tight {
  --size: var(--0);
}

.\%placeholder.\&size\:xsmall {
  --size: var(--beat-xs);
}

.\%placeholder.\&size\:small {
  --size: var(--beat-s);
}

.\%placeholder.\&size\:medium {
  --size: var(--beat-m);
}

.\%placeholder.\&size\:large {
  --size: var(--beat-l);
}

.\%placeholder.\&size\:xlarge {
  --size: var(--beat-xl);
}

.\%skip-link {
  background: var(--c-neutral--alpha);
  color: var(--c-running);
  display: block;
  font-size: var(--fs-xs);
  font-weight: var(--fw-medium);
  left: var(--beat);
  padding: 0 var(--beat-xs);
  position: fixed;
  text-transform: uppercase;
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%);
  -webkit-transition: -webkit-transform .3s;
  transition: -webkit-transform .3s;
  transition: transform .3s;
  transition: transform .3s, -webkit-transform .3s;
  top: 0;
}

.\%skip-link:focus {
  -webkit-transform: translateY(0%);
          transform: translateY(0%);
  top: var(--beat-s);
}

.\%sticky {
  position: -webkit-sticky;
  position: sticky;
  z-index: 1;
}

.\%sticky.\&arrange\:bottom {
  bottom: var(--beat-s);
}

.\%sticky.\&arrange\:top {
  top: var(--beat-s);
}

/**
 * Any kind of important call to action. Can extend buttons or
 * anchors.
 */
.\%action-clicker {
  --button-color: var(--c-alert);
  --text-color: var(--c-bg);
  background-color: var(--button-color);
  border: var(--border-medium) solid var(--text-color);
  color: var(--text-color);
  cursor: pointer;
  font-weight: var(--fw-bold);
  position: relative;
  -webkit-transition: all .2s;
  transition: all .2s;
}

.\%action-clicker::after {
  border: var(--border-medium) solid var(--text-color);
  bottom: calc(var(--border-large)*-1);
  content: '';
  display: block;
  left: calc(var(--border-large)*-1);
  position: absolute;
  right: calc(var(--border-large)*-1);
  top: calc(var(--border-large)*-1);
  -webkit-transition: all .2s;
  transition: all .2s;
}

.\%action-clicker:hover {
  background-color: var(--button-color);
  border-color: var(--text-color);
  -webkit-transition: all .2s;
  transition: all .2s;
}

.\%action-clicker:hover::after {
  border-color: var(--button-color);
  -webkit-transition: all .2s;
  transition: all .2s;
}

.\%action-clicker:focus {
  background-color: var(--button-color);
  border-color: var(--text-color);
  -webkit-transition: all .2s;
  transition: all .2s;
}

.\%action-clicker:focus::after {
  border-color: var(--text-color);
  border-width: var(--border-small);
  bottom: var(--border-medium);
  left: var(--border-medium);
  right: var(--border-medium);
  top: var(--border-medium);
  -webkit-transition: all .2s;
  transition: all .2s;
}

.\%action-clicker.\&secondary {
  --button-color: var(--c-bg);
  --text-color: var(--c-alert);
}

[type="email"] {
  border: var(--border-medium) solid var(--c-neutral);
  margin-bottom: 0.375rem;
  padding: .63rem;
  -webkit-transition: all .2s;
  transition: all .2s;
}

[type="email"]:hover, [type="email"]:focus, [type="email"]:active {
  border-color: var(--c-neutral--dark);
  -webkit-transition: all .2s;
  transition: all .2s;
}

/**
 * Site header, including nav.
 */
body > header {
  background: var(--c-neutral--light);
  max-width: none;
}

body > header hgroup {
  border-bottom: var(--border-small) solid var(--c-neutral);
}

body > header h1 {
  font-size: var(--fs-l);
  font-weight: var(--fw-medium);
  margin-top: 3rem;
  margin-left: 1.5rem;
  text-align: left;
}

body > header h2 {
  font-size: var(--fs-xs);
  font-weight: var(--fw-normal);
  margin-bottom: 1.5rem;
  margin-left: 1.5rem;
  margin-top: auto !important;
}

body > header nav {
  margin-top: 0;
}

body > header nav,
body > header nav ul {
  max-width: none;
}

body > header nav ul {
  list-style: none;
  width: auto;
}

body > header nav ul li a {
  border-bottom: var(--border-large) solid transparent;
  color: var(--c-neutral--dark);
  display: block;
  font-family: var(--ff-heading);
  font-size: var(--fs-xs);
  margin-right: var(--border-large);
  padding: 1.125rem 1rem 1.125rem 0.75rem;
  text-decoration: none;
  text-align: center;
  -webkit-transition: all .5s;
  transition: all .5s;
}

body > header nav ul li a:hover {
  text-decoration: underline;
  -webkit-transition: all .3s;
  transition: all .3s;
}

body > header nav ul li a.is-active {
  border-color: var(--c-neutral);
  color: var(--c-running);
  font-weight: var(--fw-bold);
}

body > header nav ul li a.\%nav-cta {
  background-color: var(--c-alert);
  border: 0;
  border-radius: var(--border-medium);
  color: var(--c-running--reversed);
  font-weight: var(--fw-medium);
  margin-top: 0.75rem;
  padding: 0.375rem 1.125rem;
}

body > header nav ul li a.\%nav-cta:hover {
  background-color: var(--c-alert--dark);
}

body > header nav[aria-label="main"] {
  border-bottom: var(--border-small) solid var(--c-neutral);
  margin-top: auto;
}

body > header nav[aria-label="secondary"] {
  font-size: var(--fs-xs);
  position: absolute;
  right: 0.75rem;
  top: 0.375rem;
}

body > header nav[aria-label="secondary"] a {
  color: var(--c-neutral);
  padding: 0.375rem;
}

body > header nav[aria-label="secondary"] a:hover, body > header nav[aria-label="secondary"] a.is-active {
  background: transparent;
}

/**
 * Main site footer
 */
body > footer {
  background: var(--c-neutral--light);
  padding: 4.5rem;
}

/**
* Review elements. Selectors are organized by their order in
* the review template.
*/
.\+review {
  --height: auto;
  padding: 0;
  /**
	 * Review image
	 */
  /**
	 * Review header items
	 */
  /**
	 * Review content
	 */
}

.\+review img {
  height: auto;
  margin: 0;
  -o-object-fit: cover;
     object-fit: cover;
  width: 100%;
}

.\+review header {
  background: var(--c-neutral--lighter);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: var(--space);
  padding-top: 0;
}

.\+review header li {
  font: normal 90% var(--ff-heading);
  list-style: none;
  margin: 0;
  padding: 0;
}

.\+review header .__author {
  font-weight: var(--fw-bold);
}

.\+review header .__avatar {
  color: var(--c-neutral--dark);
  font-size: 3rem;
  margin-right: 0.75rem;
  margin-top: 1.4rem;
}

.\+review header .__stars {
  color: var(--c-neutral--dark);
  font-size: 1.5rem;
  margin: 0;
}

.\+review header .__stars i[class*='star'] {
  color: var(--c-warning);
}

.\+review blockquote {
  font-size: var(--fs-xs);
  margin-top: 0;
  padding: var(--space);
}

/**
* Turns lists-items into blocks with icons.
*/
.\+feature-list {
  --icon: "\f251";
  --icon-bg: var(--c-neutral--light);
  --icon-border: transparent;
  --icon-color: var(--c-running);
  --icon-size: 2.5rem;
  --icon-size-multiplier: 2;
  --icon-weight: 300;
}

.\+feature-list li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  font-size: 90%;
  list-style: none;
  margin-left: 0;
}

.\+feature-list li .__icon {
  /**
	 * We're defining this here because it's going to be used in
	 * different ways: either manually via a class for uls etc,
	 * or automatically via li::before for ols.
	 */
  background: var(--icon-bg);
  border: var(--border-medium) solid var(--icon-border);
  border-radius: 50%;
  color: var(--icon-color);
  font-size: var(--icon-size);
  font-weight: var(--icon-weight);
  height: calc(var(--icon-size) * var(--icon-size-multiplier));
  line-height: calc(var(--icon-size) * var(--icon-size-multiplier));
  margin-bottom: auto;
  margin-right: 0.75rem;
  min-width: calc(var(--icon-size) * var(--icon-size-multiplier));
  text-align: center;
  width: calc(var(--icon-size) * var(--icon-size-multiplier));
}

.\+feature-list li .__icon + * {
  -ms-flex-negative: 99;
      flex-shrink: 99;
  margin-top: 0;
}

.\&short-items .\+feature-list li .__icon {
  --icon-size: 1.5rem;
  --icon-size-multiplier: 2;
}

.\+feature-list li strong {
  display: inline-block;
}

.\+feature-list.\&short-items li {
  --icon-size: 1.5rem;
  --icon-size-multiplier: 2;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  text-align: center;
}

ol.\+feature-list {
  counter-reset: features;
}

ol.\+feature-list li::before {
  /**
	 * We're defining this here because it's going to be used in
	 * different ways: either manually via a class for uls etc,
	 * or automatically via li::before for ols.
	 */
  background: var(--icon-bg);
  border: var(--border-medium) solid var(--icon-border);
  border-radius: 50%;
  color: var(--icon-color);
  font-size: var(--icon-size);
  font-weight: var(--icon-weight);
  height: calc(var(--icon-size) * var(--icon-size-multiplier));
  line-height: calc(var(--icon-size) * var(--icon-size-multiplier));
  margin-bottom: auto;
  margin-right: 0.75rem;
  min-width: calc(var(--icon-size) * var(--icon-size-multiplier));
  text-align: center;
  width: calc(var(--icon-size) * var(--icon-size-multiplier));
  color: var(--c-neutral--dark);
  counter-increment: features;
  content: counter(features);
  font-weight: var(--fw-heavy);
}

ol.\+feature-list li::before + * {
  -ms-flex-negative: 99;
      flex-shrink: 99;
  margin-top: 0;
}

.\&short-items ol.\+feature-list li::before {
  --icon-size: 1.5rem;
  --icon-size-multiplier: 2;
}

.\!chromatic-aberration {
  -webkit-box-shadow: -0.1rem -0.1rem 0.02rem rgba(30, 144, 255, 0.4), 0.1rem 0.1rem 0.02rem rgba(255, 69, 0, 0.4);
          box-shadow: -0.1rem -0.1rem 0.02rem rgba(30, 144, 255, 0.4), 0.1rem 0.1rem 0.02rem rgba(255, 69, 0, 0.4);
  text-shadow: -0.1rem -0.1rem 0.02rem rgba(30, 144, 255, 0.4), 0.1rem 0.1rem 0.02rem rgba(255, 69, 0, 0.4);
}

.\!h1 {
  font-family: var(--ff-heading);
  font-size: var(--fs-xl);
  font-weight: var(--fw-normal);
  line-height: 1.1;
}

.\!h1 strong {
  font-weight: var(--fw-medium);
}

.\!h2 {
  font-size: var(--fs-l);
  font-weight: var(--fw-bold);
}

/**
 * Specifies font overrides
 */
.\!font\:alt {
  font-family: var(--ff-alt);
}

.\!font\:heading {
  font-family: var(--ff-heading);
}

.\!font\:sans {
  --ff-recursive--mono: MONO"0";
  font-family: var(--ff-sans) !important;
}

.\!font\:xsmall {
  font-size: var(--fs-xs) !important;
}

.\!font\:small {
  font-size: var(--fs-s) !important;
}

.\!font\:medium {
  font-size: var(--fs-m) !important;
}

.\!font\:large {
  font-size: var(--fs-l) !important;
}

.\!font\:xlarge {
  font-size: var(--fs-xl) !important;
}

.\!color\:bg\:lighter {
  background: var(--c-neutral--lighter) !important;
}

.\!color\:border\:bg {
  border-color: var(--c-bg);
}

.\!color\:border\:lighter {
  border-color: var(--c-neutral--lighter) !important;
}

.\!color\:reversed {
  background-color: var(--c-bg--reversed);
  color: var(--c-running--reversed);
}

.\!align\:right {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
  -webkit-box-pack: end !important;
      -ms-flex-pack: end !important;
          justify-content: flex-end !important;
}

.\!align\:text\:center {
  text-align: center !important;
}

.\!align\:text\:left {
  text-align: left !important;
}

.\!align\:text\:right {
  text-align: right !important;
}

.\!size\:border\:small {
  border-style: solid;
  border-width: var(--border-small);
}

.\!size\:border\:medium {
  border-style: solid;
  border-width: var(--border-medium);
}

.\!size\:border\:large {
  border-style: solid;
  border-width: var(--border-large);
}

.\!size\!width\:measure {
  max-width: var(--measure) !important;
}

.\!space\:above\:tight {
  margin-top: 0 !important;
}

.\!suppress-owl * + * {
  margin-top: initial;
}

/**
 * Blurs out an element. Useful for e.g., "dimming" the entire
 * `main` element when a dialog pops over it.
 */
.is-blurred {
  -webkit-filter: blur(6px);
          filter: blur(6px);
}

/**
 * FontAwesome native list adjustments.
 */
.fa-ul {
  margin-left: auto !important;
  padding-left: inherit !important;
}
