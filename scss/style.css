/**
 * RHYTHM
 */
/**
* We're using a regular "beat" of the line-height to establish
* our vertical rhythm, so all spacing will be done using a
* multiple of the beat.
*/
/**
 * FONT-FACES
 */
/**
 * FONT-SIZES
 */
/**
	 * 0.9rem(14.4px) @ 24rem(384px) increasing to 1.25rem(20px) @ 80rem(1280px)
	 * See websemantics.uk/tools/responsive-font-calculator/
	 * Where 1.1458=100 * font-size_Difference / viewport_Width_Difference
	 * The base value (0.875rem) must be stated in rem to maintain accessibility.
	 */
/**
 * Custom properties from Sass variables
 */
:root {
  --ff-alt: IBM Plex Sans, sans-serif;
  --ff-heading: Work Sans, sans-serif;
  --ff-running: iA Writer Duo S, monospace;
  --fs-blockquote: 0.9rem;
  --fs-fineprint: 0.8rem;
  --fs-h1: 2rem;
  --fs-h2: 1.5rem;
  --fs-h3: 1.25rem;
  --fs-running: calc(0.9rem + ((1vw - 0.24rem) * 0.625));
  --leading: 1.5;
  --measure: 72ch;
  --stretch-min: 15rem;
  --gutter: 0.75rem;
}

:root {
  --c-alt: powderblue;
  --c-bg: white;
  --c-house: cadetblue;
  --c-head: var(--c-house);
  --c-running: #222;
}

/**
 * Set up the page and fix any cross-browser weirdness
 */
/**
 * Page setup
 */
:root {
  color: var(--c-running);
  font-family: var(--ff-running);
  font-size: 20px;
  font-size: var(--fs-running);
  line-height: var(--leading);
  min-height: 0vw;
}

@media screen and (min-width: 80rem) {
  :root {
    font-size: 1.25rem;
  }
}

/**
 * Change the cursor on busy elements in all browsers.
 */
[aria-busy="true"] {
  cursor: progress;
}

/*
 * Change the cursor on control elements in all browsers.
 */
[aria-controls] {
  cursor: pointer;
}

/*
 * Change the cursor on disabled, not-editable, or otherwise
 * inoperable elements in all browsers.
 */
[aria-disabled="true"],
[disabled] {
  cursor: not-allowed;
}

/*
 * Remove the tapping delay on clickable elements in all browsers.
 */
a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
      touch-action: manipulation;
}

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Chrome, Safari & Edge don't get this right
 */
b,
strong {
  font-weight: bolder;
}

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

iframe {
  border-style: none;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * Universal axioms
 */
* {
  background: transparent;
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 100%;
  font-style: normal;
  font-weight: normal;
  margin: 0;
  outline: 0;
  padding: 0;
  vertical-align: baseline;
}

* + * {
  margin-top: 1.5rem;
}

.\@autogrid {
  display: -ms-grid;
  display: grid;
  grid-gap: var(--gap, 0);
  -ms-grid-columns: (minmax(var(--stretch-min), 1fr))[auto-fit];
      grid-template-columns: repeat(auto-fit, minmax(var(--stretch-min), 1fr));
}

/**
 * Centers its children horizontally in the viewport.
 * 
 * Use cases: pretty much anything.
 */
.\@center-h {
  --height: autofit;
  --padding: 1rem;
  --width: 100vw;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  max-width: var(--width);
  min-height: var(--height);
  padding: var(--padding);
}

.\@center-h > * {
  margin-left: auto;
  margin-right: auto;
}

/**
 * Centers its child vertically in the viewport.
 * Allows for a child above and/or below the principal element;
 * these will be aligned to the top and/or bottom.
 * 
 * Use cases: <dialog> elements and other modals, full-page blog
 * titles, etc.
 */
.\@center-v {
  --height: 100vh;
  --padding: 1rem;
  --width: 100vw;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  max-width: var(--width);
  min-height: var(--height);
  padding: var(--padding);
}

.\@center-v\\center {
  margin-bottom: auto;
  margin-top: auto;
}

.\@center-v > :first-child:not(.\@center-v\\center) {
  margin-top: 0;
}

.\@center-v > :last-child:not(.\@center-v\\center) {
  margin-bottom: 0;
}

/**
 * Creates an "old lens" effect.
 */
.\!chromatic-aberration {
  -webkit-box-shadow: -0.1rem -0.1rem 0.02rem rgba(30, 144, 255, 0.4), 0.1rem 0.1rem 0.02rem rgba(255, 69, 0, 0.4);
          box-shadow: -0.1rem -0.1rem 0.02rem rgba(30, 144, 255, 0.4), 0.1rem 0.1rem 0.02rem rgba(255, 69, 0, 0.4);
  text-shadow: -0.1rem -0.1rem 0.02rem rgba(30, 144, 255, 0.4), 0.1rem 0.1rem 0.02rem rgba(255, 69, 0, 0.4);
}

/**
 * Used to set universal text styles, like constraining
 * text blocks into sane widths.
 */
blockquote,
h1,
h2,
h3,
h4,
h5,
h6,
ol,
p,
ul,
.\+textblock {
  max-width: var(--measure);
}

/**
 * Used to establish sane baselines for headings.
 */
h1,
h2,
h3,
h4,
h5,
h6,
.\+heading {
  max-width: var(--measure);
  font-family: var(--ff-heading);
  line-height: 1.25;
}

/**
 * Used to set basic styles for running text.
 */
.\+running {
  max-width: var(--measure);
}

/**
 * Initial paragraphs that should stand out more than others by
 * being larger, having a drop-cap, or whatever.
 */
.\+lede {
  --drop-cap-margin-top: -1.75rem;
}

.\+lede::first-letter {
  -webkit-box-shadow: -0.2rem -0.2rem 0.02rem rgba(30, 144, 255, 0.4), 0.2rem 0.2rem 0.02rem rgba(255, 69, 0, 0.4);
          box-shadow: -0.2rem -0.2rem 0.02rem rgba(30, 144, 255, 0.4), 0.2rem 0.2rem 0.02rem rgba(255, 69, 0, 0.4);
  text-shadow: -0.2rem -0.2rem 0.02rem rgba(30, 144, 255, 0.4), 0.2rem 0.2rem 0.02rem rgba(255, 69, 0, 0.4);
  border: 0.375rem double;
  border-radius: 50%;
  float: left;
  font-size: 3rem;
  font-weight: bold;
  line-height: 2rem;
  margin: var(--drop-cap-margin-top) 0.375rem 0 0;
  padding: 1rem;
  text-align: center;
}

.\+lede::first-line {
  text-transform: uppercase;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0;
  overflow: visible;
}

button,
input[type="submit"] {
  -webkit-box-shadow: -0.2rem -0.2rem 0.02rem rgba(30, 144, 255, 0.4), 0.2rem 0.2rem 0.02rem rgba(255, 69, 0, 0.4);
          box-shadow: -0.2rem -0.2rem 0.02rem rgba(30, 144, 255, 0.4), 0.2rem 0.2rem 0.02rem rgba(255, 69, 0, 0.4);
  text-shadow: -0 -0 0.02rem rgba(30, 144, 255, 0.4), 0 0 0.02rem rgba(255, 69, 0, 0.4);
  background: var(--c-running);
  color: var(--c-bg);
  cursor: pointer;
  padding: 0.75rem 1.5rem;
  -webkit-transition: .1s all;
  transition: .1s all;
}

button:hover,
input[type="submit"]:hover {
  -webkit-box-shadow: -0.3rem -0.3rem 0.02rem rgba(30, 144, 255, 0.4), 0.3rem 0.3rem 0.02rem rgba(255, 69, 0, 0.4);
          box-shadow: -0.3rem -0.3rem 0.02rem rgba(30, 144, 255, 0.4), 0.3rem 0.3rem 0.02rem rgba(255, 69, 0, 0.4);
  text-shadow: -0 -0 0.02rem rgba(30, 144, 255, 0.4), 0 0 0.02rem rgba(255, 69, 0, 0.4);
  -webkit-transform: scale(1.05);
          transform: scale(1.05);
  -webkit-transition: .2s all;
  transition: .2s all;
}

dialog {
  background: #fff;
  border: 2px solid WindowFrame;
  border-radius: 3px;
  -webkit-box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.1), 0 2rem 7rem rgba(0, 0, 0, 0.3);
          box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.1), 0 2rem 7rem rgba(0, 0, 0, 0.3);
  display: block;
  left: 50%;
  margin: 0;
  max-height: 100vh;
  max-width: 100vw;
  padding: 0 1rem 1rem;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

@media all and (min-width: 52rem) {
  dialog {
    padding: 0 2rem 2rem;
  }
}

@media all and (max-width: 32rem) {
  dialog {
    overflow: scroll;
  }
}

dialog:not([open]) {
  display: none;
}

dialog::-webkit-backdrop,
dialog + .backdrop {
  background: rgba(255, 255, 255, 0.35);
  -webkit-transition: background 0.25s;
  transition: background 0.25s;
  will-change: background;
}

dialog::backdrop,
dialog + .backdrop {
  background: rgba(255, 255, 255, 0.35);
  -webkit-transition: background 0.25s;
  transition: background 0.25s;
  will-change: background;
}

dialog .dialog\:close {
  background: transparent;
  border: 0;
  color: #444;
  cursor: pointer;
  height: 3rem;
  line-height: 3.4rem;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
  width: 3rem;
}

dialog .dialog\:close:hover {
  color: black;
  -webkit-transform: scale(1.1);
          transform: scale(1.1);
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
}

dialog .dialog\:close:focus {
  -webkit-transform: scale(0.3);
          transform: scale(0.3);
  -webkit-transition: -webkit-transform 0.5s;
  transition: -webkit-transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
}

dialog .dialog\:close i {
  font-size: 1.5rem;
}

/**
 * Blurs out an element. Useful for e.g., "dimming" the entire
 * `main` element when a dialog pops over it.
 */
.is-blurred,
.js\\is-blurred {
  -webkit-filter: blur(6px);
          filter: blur(6px);
}
